"""
用例层：测试人员编写测试用例代码的地方，可以调用page层和封装层。
page层：一个页面一个类，包含该页面的业务逻辑封装以及部分控件定义。
封装层：根据业务需要，封装常用的业务逻辑(相比于page层的业务逻辑封装，它的范围更广，有些时候是跨页面的业务逻辑。 属于模块级的业务封装)
"""
# TODO 所有导航，页面辅助以及会跨越多个页面的逻辑均涉及为接口，接口中定义默认实现。
# TODO 每个page类只负责自己页面的逻辑
# TODO 页面类的类名以Page为结尾。 接口(共用逻辑)不得使用Page结尾
# TODO 每个页面以封装业务逻辑为主，通过参数控制调用不同的业务逻辑。 无特殊情况下不要让外界知道控件的信息。
# TODO 所有页面逻辑皆返回特定页面对象，以保证测试用例使用workflow式API。
# TODO 除特别简单的逻辑外。所有业务逻辑的参数均使用java bean以及枚举封装，禁止使用基本数据类型(int,String, long等)，并按照UI实际情况设计默认值
# TODO 所有状态吗，产品特定文案，内置类型等均使用枚举定义。并使用枚举来规范入参。
# TODO 模块间有数据依赖的时候。每个模块自己负责提供对外接口。
# TODO 所有业务逻辑使用@Step标注进行标记(allure 的特性).


# TODO 每个case都必须使用Features,Stroies, Title 标注来为case添加report 信息(我们使用的是allure这个report框架)， 根据情况可以添加Description标注。
# TODO case中涉及UI上创建的实体名称，比如项目，数据，模型，用户等都需要使用随机名称。 不能使用固定名称。 以防一个环境多次运行的时候因为名称冲突而失败
# TODO case中不准许出现页面元素信息，所有页面元素的封装和业务逻辑的封装要写在page层中
